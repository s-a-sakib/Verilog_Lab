module Gray_To_Binary(G , B);
	input [3 : 0] G;
	output [3 : 0] B;
	
	and (B[3] , G[3] , G[3]);
	xor (B[2] , B[3] , G[2]);
	xor (B[1] , B[2] , G[1]);
	xor (B[0] , B[1] , G[0]);
endmodule

module Gray_To_Binary_Test;
	reg [3 : 0] g;
	wire [3 : 0] b;
	Gray_To_Binary GTB(.G(g) , .B(b));
	initial begin
		#0; g = 4'b0000;
        	#50; g = 4'b0001;
        	#50; g = 4'b0011;
        	#50; g = 4'b0111;
        	#50; g = 4'b1111;
	end
endmodule
